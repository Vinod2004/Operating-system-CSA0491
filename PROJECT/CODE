#include <stdio.h>
#include <string.h>

#define MAX_TASKS 10

struct Task {
    char name[50];
    int priority;
    int duration;
};

struct Task tasks[MAX_TASKS];
int numTasks = 0;

void addTask() {
    if (numTasks >= MAX_TASKS) {
        printf("Cannot add more tasks. Task manager is full.\n");
        return;
    }

    struct Task newTask;
    printf("Enter task name: ");
    scanf("%s", newTask.name);
    printf("Enter task priority (1-10): ");
    scanf("%d", &newTask.priority);
    printf("Enter task duration (in hours): ");
    scanf("%d", &newTask.duration);

    tasks[numTasks++] = newTask;
    printf("Task added successfully.\n");
}

void displayTasks() {
    if (numTasks == 0) {
        printf("No tasks available. Task manager is empty.\n");
        return;
    }

    printf("Tasks:\n");
    for (int i = 0; i < numTasks; i++) {
        printf("Task Name: %s\n", tasks[i].name);
        printf("Priority: %d\n", tasks[i].priority);
        printf("Duration: %d hours\n\n", tasks[i].duration);
    }
}

void deleteTask() {
    if (numTasks == 0) {
        printf("No tasks available. Task manager is empty.\n");
        return;
    }

    int index;
    printf("Enter index of task to delete (0-%d): ", numTasks - 1);
    scanf("%d", &index);

    if (index < 0 || index >= numTasks) {
        printf("Invalid index. Please enter a valid index.\n");
        return;
    }

    for (int i = index; i < numTasks - 1; i++) {
        tasks[i] = tasks[i + 1];
    }

    numTasks--;
    printf("Task deleted successfully.\n");
}

int main() {
    int choice;
    do {
        printf("\nTask Manager Menu:\n");
        printf("1. Add Task\n");
        printf("2. Display Tasks\n");
        printf("3. Delete Task\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                addTask();
                break;
            case 2:
                displayTasks();
                break;
            case 3:
                deleteTask();
                break;
            case 4:
                printf("Exiting Task Manager.\n");
                break;
            default:
                printf("Invalid choice. Please enter a valid option.\n");
                break;
        }
    } while (choice != 4);

    return 0;
}
